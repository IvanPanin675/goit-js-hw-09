{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC5BA,EAAM,G,CAIb,MAAMO,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,QAASF,SAASC,cAAc,yBAChCE,OAAQH,SAASC,cAAc,wBAC/BG,SAAUJ,SAASC,cAAc,2BAGnCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAiBC,GACfA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOX,EAAKM,SAASM,OAAQF,IAC/CnB,EAAcmB,EAAI,EAAGA,EAAIC,OAAOX,EAAKK,OAAOO,OAASD,OAAOX,EAAKI,QAAQQ,QACtEC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QACd,sBAAoB1B,QAAeC,MAAU,IAIrDe,EAAEW,OAAOC,O,IAIXC,QAAQC,IAAItB,EAAKI,SACjBiB,QAAQC,IAAItB,EAAKK,QACjBgB,QAAQC,IAAItB,EAAKM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } \n        reject({ position, delay });\n    }, delay);\n  });\n};\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name = \"delay\"]'),\n  stepEl: document.querySelector('input[name = \"step\"]'),\n  amountEl: document.querySelector('input[name = \"amount\"]')\n};\n\nrefs.form.addEventListener('submit', onClick);\n\nfunction onClick(e) {\n  e.preventDefault();\n\n  for (let i = 0; i < Number(refs.amountEl.value); i ++) {\n    createPromise(i + 1, i * Number(refs.stepEl.value) + Number(refs.delayEl.value))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  e.target.reset();\n};\n\n\nconsole.log(refs.delayEl);\nconsole.log(refs.stepEl);\nconsole.log(refs.amountEl);"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$refs","form","document","querySelector","delayEl","stepEl","amountEl","addEventListener","e","preventDefault","i","Number","value","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset","console","log"],"version":3,"file":"03-promises.5c329008.js.map"}